[{"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\index.tsx":"1","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\reportWebVitals.ts":"2","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\App.tsx":"3","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SearchPage.tsx":"4","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\Movies.tsx":"5","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SelectProfile.tsx":"6","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\Series.tsx":"7","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\FavPage.tsx":"8","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SubPage.tsx":"9","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SubSuccess.tsx":"10","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\HistoryPage.tsx":"11","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\FaqPage.tsx":"12","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\AboutPage.tsx":"13","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\Landing.tsx":"14","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\Homepage.tsx":"15","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SettingsPage.tsx":"16","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\PlayerPage.tsx":"17","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\MoviePage.tsx":"18","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\ConditionPage.tsx":"19","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SeriePage.tsx":"20","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\CreateProfile.tsx":"21","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\AdminPage.tsx":"22","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\PlayerPageSeries.tsx":"23","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\MoviesGenrePage.tsx":"24","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SeriesGenrePage.tsx":"25","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\UserPageAdmin.tsx":"26","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesPosters.tsx":"27","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Header.tsx":"28","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MovieDetails.tsx":"29","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Footer.tsx":"30","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Player.tsx":"31","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MoviesPosters.tsx":"32","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\PlayerSerie.tsx":"33","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesDetails.tsx":"34","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Search.tsx":"35","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesGenre.tsx":"36","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MoviesGenre.tsx":"37","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Connection.tsx":"38","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\ActorPage.tsx":"39","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Actors.tsx":"40","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MoviesInfo.tsx":"41","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MoviesSuggestion.tsx":"42","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesInfo.tsx":"43","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesSuggestion.tsx":"44"},{"size":431,"mtime":1662968180129,"results":"45","hashOfConfig":"46"},{"size":440,"mtime":1662968180148,"results":"47","hashOfConfig":"46"},{"size":3842,"mtime":1662969918836,"results":"48","hashOfConfig":"46"},{"size":426,"mtime":1662968180143,"results":"49","hashOfConfig":"46"},{"size":517,"mtime":1663067460217,"results":"50","hashOfConfig":"46"},{"size":530,"mtime":1662968180144,"results":"51","hashOfConfig":"46"},{"size":450,"mtime":1662968180145,"results":"52","hashOfConfig":"46"},{"size":514,"mtime":1662968180139,"results":"53","hashOfConfig":"46"},{"size":6602,"mtime":1662968180146,"results":"54","hashOfConfig":"46"},{"size":490,"mtime":1662968180147,"results":"55","hashOfConfig":"46"},{"size":512,"mtime":1662968180139,"results":"56","hashOfConfig":"46"},{"size":496,"mtime":1662968180138,"results":"57","hashOfConfig":"46"},{"size":506,"mtime":1662968180134,"results":"58","hashOfConfig":"46"},{"size":1536,"mtime":1662968180141,"results":"59","hashOfConfig":"46"},{"size":1604,"mtime":1662968180140,"results":"60","hashOfConfig":"46"},{"size":516,"mtime":1662968180146,"results":"61","hashOfConfig":"46"},{"size":426,"mtime":1662968180143,"results":"62","hashOfConfig":"46"},{"size":442,"mtime":1662968180141,"results":"63","hashOfConfig":"46"},{"size":522,"mtime":1662968180135,"results":"64","hashOfConfig":"46"},{"size":445,"mtime":1662968180144,"results":"65","hashOfConfig":"46"},{"size":10441,"mtime":1662968180137,"results":"66","hashOfConfig":"46"},{"size":2784,"mtime":1662968180135,"results":"67","hashOfConfig":"46"},{"size":453,"mtime":1662968180143,"results":"68","hashOfConfig":"46"},{"size":525,"mtime":1662968180142,"results":"69","hashOfConfig":"46"},{"size":525,"mtime":1662968180145,"results":"70","hashOfConfig":"46"},{"size":1668,"mtime":1662968180148,"results":"71","hashOfConfig":"46"},{"size":18836,"mtime":1663077501085,"results":"72","hashOfConfig":"46"},{"size":3164,"mtime":1662977328406,"results":"73","hashOfConfig":"46"},{"size":2917,"mtime":1662989184989,"results":"74","hashOfConfig":"46"},{"size":1113,"mtime":1662968180102,"results":"75","hashOfConfig":"46"},{"size":1041,"mtime":1662968180104,"results":"76","hashOfConfig":"46"},{"size":23969,"mtime":1663077390191,"results":"77","hashOfConfig":"46"},{"size":1015,"mtime":1662968180105,"results":"78","hashOfConfig":"46"},{"size":3048,"mtime":1662990108836,"results":"79","hashOfConfig":"46"},{"size":3091,"mtime":1662968180105,"results":"80","hashOfConfig":"46"},{"size":4270,"mtime":1662968180107,"results":"81","hashOfConfig":"46"},{"size":4300,"mtime":1662968180103,"results":"82","hashOfConfig":"46"},{"size":2541,"mtime":1662968180101,"results":"83","hashOfConfig":"46"},{"size":424,"mtime":1662969875778,"results":"84","hashOfConfig":"46"},{"size":1580,"mtime":1662973498321,"results":"85","hashOfConfig":"46"},{"size":3912,"mtime":1662986771768,"results":"86","hashOfConfig":"46"},{"size":1788,"mtime":1662990593214,"results":"87","hashOfConfig":"46"},{"size":4642,"mtime":1662986933672,"results":"88","hashOfConfig":"46"},{"size":2284,"mtime":1662990597975,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1v1saq2",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"93"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"93"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"93"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"93"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"93"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"93"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"93"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"93"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"93"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"93"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"93"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"93"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"93"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"93"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"93"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"93"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"93"},"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\index.tsx",[],[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\reportWebVitals.ts",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\App.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SearchPage.tsx",["251"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport Search from \"../component/Search\";\r\n\r\nfunction SearchPage() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <Search />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\Movies.tsx",["252","253","254","255"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport { MoviesPosters } from \"../component/MoviesPosters\";\r\n\r\nfunction Movies() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <MoviesPosters />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SelectProfile.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\Series.tsx",["256"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport { SeriesPosters } from \"../component/SeriesPosters\";\r\n\r\nexport function Series() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <SeriesPosters />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Series;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\FavPage.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SubPage.tsx",["257"],[],"import React from \"react\";\r\nimport Header from \"../component/Header\";\r\nimport Footer from \"../component/Footer\";\r\nimport axios from \"axios\";\r\n\r\ninterface UserFormProps {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface ConfirmMailPassword {\r\n  confirmEmail: string;\r\n  confirmPassword: string;\r\n}\r\n\r\ninterface Birthday {\r\n  birthday: string;\r\n}\r\ninterface UserFormState {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  birthday: number;\r\n}\r\n\r\nfunction SubPage() {\r\n  const [confirmMailPassword, setConfirmMailPassword] =\r\n    React.useState<ConfirmMailPassword>({\r\n      confirmEmail: \"\",\r\n      confirmPassword: \"\",\r\n    });\r\n\r\n  const [birthday, setBirthday] = React.useState<Birthday>({\r\n    birthday: \"\",\r\n  });\r\n\r\n  function dateIntoAge(date: string) {\r\n    const today = new Date();\r\n    const birthDate = new Date(date);\r\n    let age: number = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  }\r\n\r\n  const userAge: number = dateIntoAge(birthday.birthday);\r\n\r\n  const [userForm, setUserForm] = React.useState<UserFormProps>({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const userFormState: UserFormState = {\r\n    firstName: userForm.firstName,\r\n    lastName: userForm.lastName,\r\n    email: userForm.email,\r\n    password: userForm.password,\r\n    birthday: dateIntoAge(birthday.birthday),\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setUserForm({ ...userForm, [name]: value });\r\n  };\r\n\r\n  const handleBirthday = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setBirthday({\r\n      birthday: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleConfirmMailPassword = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setConfirmMailPassword({ ...confirmMailPassword, [name]: value });\r\n  };\r\n\r\n  const confirmEmail = () => {\r\n    if (userForm.email === confirmMailPassword.confirmEmail) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const confirmPassword = () => {\r\n    if (userForm.password === confirmMailPassword.confirmPassword) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const confirmAge = () => {\r\n    if (userAge >= 18) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  async function handleSubmit(e: any) {\r\n    e.preventDefault();\r\n    if (confirmEmail() && confirmPassword() && confirmAge()) {\r\n      const response = await axios\r\n        .post(\"http://localhost:5000/api/user/register\", userFormState)\r\n        .then((response) => {\r\n          console.log(response);\r\n          console.log(response.status);\r\n          window.location.href = \"/Subscription/success\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      alert(\"Veuillez remplir correctement les champs\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container content-container--SubPage\">\r\n        <form>\r\n          <div className=\"form-group form-group-firstname\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              value={userForm.firstName}\r\n              onChange={handleChange}\r\n              required\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group-lastname\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              value={userForm.lastName}\r\n              onChange={handleChange}\r\n              required\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group-email\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value={userForm.email}\r\n              onChange={handleChange}\r\n              required\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group-email-confirm\">\r\n            <label htmlFor=\"confirmEmail\">Confirm Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"confirmEmail\"\r\n              id=\"confirmEmail\"\r\n              value={confirmMailPassword.confirmEmail}\r\n              onChange={handleConfirmMailPassword}\r\n              autoComplete=\"off\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group-password\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={userForm.password}\r\n              onChange={handleChange}\r\n              required\r\n              autoComplete=\"off\"\r\n              minLength={6}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group-password-confirm\">\r\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              value={confirmMailPassword.confirmPassword}\r\n              onChange={handleConfirmMailPassword}\r\n              required\r\n              autoComplete=\"off\"\r\n              minLength={6}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group-birthdate\">\r\n            <label htmlFor=\"birthDate\">Birth Date</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"birthDate\"\r\n              id=\"birthDate\"\r\n              value={birthday.birthday}\r\n              onChange={handleBirthday}\r\n              required\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group form-group-submit\">\r\n            <label htmlFor=\"submit\">Submit</label>\r\n            <button type=\"submit\" name=\"submit\" onClick={handleSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SubPage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SubSuccess.tsx",["258"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Connection from \"../component/Connection\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\n\r\nfunction SubSuccess() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <div>\r\n          <NavLink to=\"/\">Landing</NavLink>\r\n        </div>\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SubSuccess;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\HistoryPage.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\FaqPage.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\AboutPage.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\Landing.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\Homepage.tsx",["259","260"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\n\r\ninterface Genres {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nfunction Homepage() {\r\n  const url: string =\r\n    \"https://api.themoviedb.org/3/genre/movie/list?api_key=a378b12e0a9383634a503a8f29d43915\";\r\n\r\n  const [genres, setGenres] = React.useState([]);\r\n\r\n  const getGenres = async () => {\r\n    const { data } = await axios.get(url);\r\n    setGenres(data.genres);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getGenres();\r\n  }, []);\r\n\r\n  const urlCallGender = (id: number) => {\r\n    return `https://api.themoviedb.org/3/discover/movie?api_key=a378b12e0a9383634a503a8f29d43915&language=en-US&with_genres=${id}`;\r\n  };\r\n\r\n  const [movies, setMovies] = React.useState([]);\r\n\r\n  const getMovies = async (id: number) => {\r\n    const { data } = await axios.get(urlCallGender(id));\r\n    setMovies(data.results);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getMovies(28);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <div>\r\n          <h1>Homepage</h1>\r\n          <p>This is the homepage page</p>\r\n          {genres.map((item: Genres) => (\r\n            <>\r\n              <p>{item.name}</p>\r\n              <p>{item.id}</p>\r\n            </>\r\n          ))}\r\n          <NavLink to=\"/\">Landing</NavLink>\r\n        </div>\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SettingsPage.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\PlayerPage.tsx",["261"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport Player from \"../component/Player\";\r\n\r\nfunction PlayerPage() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <Player />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlayerPage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\MoviePage.tsx",["262"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport MovieDetails from \"../component/MovieDetails\";\r\n\r\nfunction MoviePage() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <MovieDetails />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviePage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\ConditionPage.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SeriePage.tsx",["263"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport SeriesDetails from \"../component/SeriesDetails\";\r\n\r\nfunction SeriePage() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <SeriesDetails />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeriePage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\CreateProfile.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\AdminPage.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\PlayerPageSeries.tsx",["264"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport PlayerSerie from \"../component/PlayerSerie\";\r\n\r\nfunction PlayerPageSeries() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <PlayerSerie />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlayerPageSeries;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\MoviesGenrePage.tsx",["265","266","267","268"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport MoviesGenre from \"../component/MoviesGenre\";\r\n\r\nfunction MoviesGenrePage() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <MoviesGenre />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesGenrePage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\SeriesGenrePage.tsx",["269","270","271","272"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport SeriesGenre from \"../component/SeriesGenre\";\r\n\r\nfunction SeriesGenrePage() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <SeriesGenre />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeriesGenrePage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\UserPageAdmin.tsx",["273"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\nimport axios from \"axios\";\r\n\r\nfunction UserPageAdmin() {\r\n  const id = window.location.pathname.split(\"/\")[2];\r\n\r\n  const [user, setUser] = React.useState({\r\n    _id: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    birthday: 0,\r\n    id_profiles: \"\",\r\n    is_admin: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    axios.get(`http://localhost:5000/api/user/${id}`).then((response) => {\r\n      setUser(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  function ifItsTrue(is_admin: boolean) {\r\n    if (is_admin === true) {\r\n      return \"Yes\";\r\n    } else {\r\n      return \"No\";\r\n    }\r\n  }\r\n\r\n  function displayUserInfo() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"userContainer-left\">\r\n            <p>First name : {user.firstName}</p>\r\n            <p>Last name : {user.lastName}</p>\r\n            <p>Email : {user.email}</p>\r\n            <p>Age : {user.birthday}</p>\r\n            <p>Is admin: {ifItsTrue(user.is_admin)}</p>\r\n          </div>\r\n          <div className=\"userContainer-right\">\r\n            <p>Profiles : {user.id_profiles}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <NavLink to=\"/admin\">Back</NavLink>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <h1>User overview</h1>\r\n      <main className=\"content-container content-container-useradmin\">\r\n        <div>{displayUserInfo()}</div>\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserPageAdmin;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesPosters.tsx",["274"],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Header.tsx",["275","276"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Connection from \"./Connection\";\r\nimport MyLogo from \"../img/logo_holly_nobg.png\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  function logOut() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"admin\");\r\n      window.location.href = \"/\";\r\n    }\r\n  }\r\n\r\n  let [Search, setSearch] = useState(\"\");\r\n\r\n  const handleChange = (e: any) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onClickHandlerMovie = () => navigate(`/Search/${Search}`);\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"header__left\">\r\n          {localStorage.getItem(\"token\") ? (\r\n            <NavLink className=\"logoHome\" to=\"/Home\">\r\n              <img src={MyLogo} className=\"hollyLogo\" alt=\"logo\" />\r\n            </NavLink>\r\n          ) : (\r\n            <NavLink className=\"logoHome\" to=\"/\">\r\n              <img src={MyLogo} className=\"hollyLogo\" alt=\"logo\" />\r\n            </NavLink>\r\n          )}\r\n          {localStorage.getItem(\"token\") ? (\r\n            <div className=\"navLink_container\">\r\n              <NavLink className=\"header_navLink\" to={\"/Home/Movies\"}>\r\n                Movies\r\n              </NavLink>\r\n              <NavLink className=\"header_navLink\" to={\"/Home/Series\"}>\r\n                Series\r\n              </NavLink>\r\n              <NavLink className=\"header_navLink\" to={\"/Watchlist\"}>\r\n                Watchlist\r\n              </NavLink>\r\n              <NavLink className=\"header_navLink\" to={\"/\"}>\r\n                Forum\r\n              </NavLink>\r\n\r\n              <div className=\"search_box\">\r\n                <form onSubmit={onClickHandlerMovie}>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"Search\"\r\n                    placeholder=\"type to search\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"header__right\">\r\n          {localStorage.getItem(\"token\") &&\r\n          localStorage.getItem(\"admin\") === \"true\" ? (\r\n            <NavLink className=\"navLink_right\" to={\"/Admin\"}>\r\n              Admin\r\n            </NavLink>\r\n          ) : localStorage.getItem(\"token\") ? null : (\r\n            <NavLink className=\"navLink_right\" to={\"/Subscription\"}>\r\n              Subscribe\r\n            </NavLink>\r\n          )}\r\n\r\n          {localStorage.getItem(\"token\") ? (\r\n            <NavLink className=\"navLink_right\" to={\"/\"} onClick={logOut}>\r\n              Log Out\r\n            </NavLink>\r\n          ) : (\r\n            <a className=\"navLink_right\" onClick={() => setIsOpen(true)}>\r\n              Log In\r\n            </a>\r\n          )}\r\n        </div>\r\n        {isOpen && <Connection isOpen={isOpen} setIsOpen={setIsOpen} />}\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MovieDetails.tsx",["277"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport MoviesInfo from \"./MoviesInfo\";\r\nimport MoviesSuggestion from \"./MoviesSuggestion\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  id: string;\r\n  overview: string;\r\n  runtime: string;\r\n  title: string;\r\n  tagline: string;\r\n  release_date: string;\r\n  vote_average: string;\r\n}\r\n\r\ninterface picturesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  file_path: string;\r\n}\r\n\r\nfunction MovieDetails() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URL = `https://api.themoviedb.org/3/movie/${ID}?api_key=${API_KEY}&language=en-US`;\r\n  const URLIMG = `https://api.themoviedb.org/3/movie/${ID}/images?api_key=${API_KEY}`;\r\n\r\n  console.log(URL);\r\n\r\n  let [movies, setMovies] = useState<moviesProps | undefined>();\r\n  let [pictures, setPictures] = useState<picturesProps | undefined>();\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n    getPicture();\r\n  }, []);\r\n\r\n  const getMovie = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMovies(data);\r\n  };\r\n\r\n  const getPicture = async () => {\r\n    const { data } = await axios.get(URLIMG);\r\n    setPictures(data.backdrops[0]);\r\n  };\r\n\r\n  //___________________________\r\n\r\n  const [toggleState, setToggleState] = useState(1);\r\n\r\n  const toggleTab = (index: any) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  //___________________________\r\n\r\n  return (\r\n    <>\r\n      <div className=\"banner\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original` + pictures?.file_path}\r\n          alt=\"poster\"\r\n        />\r\n        <div className=\"options\">\r\n          <NavLink className=\"poster\" to={`/Player/movie/${movies?.id}`}>\r\n            <button>Play</button>\r\n          </NavLink>\r\n          <button>Watchlist</button>\r\n          <button>Fave</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"button_info\">\r\n        <button\r\n          className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(1)}\r\n        >\r\n          Details\r\n        </button>\r\n\r\n        <button\r\n          className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(2)}\r\n        >\r\n          Suggestions\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"content-tabs\">\r\n        <div\r\n          className={toggleState === 1 ? \"content  active-content\" : \"content\"}\r\n        >\r\n          <MoviesInfo />\r\n        </div>\r\n\r\n        <div\r\n          className={toggleState === 2 ? \"content  active-content\" : \"content\"}\r\n        >\r\n          <MoviesSuggestion />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Footer.tsx",[],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Player.tsx",["278","279"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface trailerProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  name: string;\r\n  key: string;\r\n}\r\n\r\nfunction Player() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n\r\n  const URL = `https://api.themoviedb.org/3/movie/${ID}/videos?api_key=${API_KEY}&language=en-US`;\r\n\r\n  let [movies, setMovies] = useState<trailerProps | undefined>();\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, []);\r\n\r\n  const getMovie = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMovies(data.results[0]);\r\n  };\r\n\r\n  console.log(movies?.key);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"trailer\">\r\n        <iframe\r\n          src={`https://www.youtube.com/embed/` + movies?.key}\r\n          title=\"Youtube video player\"\r\n        ></iframe>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MoviesPosters.tsx",["280"],[],"C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\PlayerSerie.tsx",["281","282"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface trailerProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  name: string;\r\n  key: string;\r\n}\r\n\r\nfunction PlayerSerie() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n\r\n  const URL = `https://api.themoviedb.org/3/tv/${ID}/videos?api_key=${API_KEY}&language=en-US`;\r\n  let [movies, setMovies] = useState<trailerProps | undefined>();\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, []);\r\n\r\n  const getMovie = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMovies(data.results[0]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"trailer\">\r\n        <iframe\r\n          src={`https://www.youtube.com/embed/` + movies?.key}\r\n          title=\"Youtube video player\"\r\n        ></iframe>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlayerSerie;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesDetails.tsx",["283"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SeriesInfo from \"./SeriesInfo\";\r\nimport SeriesSuggestion from \"./SeriesSuggestion\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  id: string;\r\n  overview: string;\r\n  runtime: string;\r\n  name: string;\r\n  tagline: string;\r\n  first_air_date: string;\r\n  last_air_date: string;\r\n  0: string;\r\n  number_of_seasons: string;\r\n  number_of_episodes: string;\r\n  vote_average: string;\r\n}\r\n\r\ninterface picturesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  file_path: string;\r\n}\r\n\r\nfunction SeriesDetails() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URL = `https://api.themoviedb.org/3/tv/${ID}?api_key=${API_KEY}&language=en-US`;\r\n  const URLIMG = `https://api.themoviedb.org/3/tv/${ID}/images?api_key=${API_KEY}`;\r\n\r\n  let [movies, setMovies] = useState<moviesProps | undefined>();\r\n  let [pictures, setPictures] = useState<picturesProps | undefined>();\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n    getPicture();\r\n  }, []);\r\n\r\n  const getMovie = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMovies(data);\r\n  };\r\n\r\n  const getPicture = async () => {\r\n    const { data } = await axios.get(URLIMG);\r\n    setPictures(data.backdrops[0]);\r\n  };\r\n\r\n  //--------------------\r\n\r\n  //___________________________\r\n\r\n  const [toggleState, setToggleState] = useState(1);\r\n\r\n  const toggleTab = (index: any) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  //___________________________\r\n\r\n  //-------------------\r\n\r\n  return (\r\n    <>\r\n      <div className=\"banner\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original` + pictures?.file_path}\r\n          alt=\"poster\"\r\n        />\r\n        <div className=\"options\">\r\n          <NavLink className=\"poster\" to={`/Player/Serie/${movies?.id}`}>\r\n            <button>Play</button>\r\n          </NavLink>\r\n          <button>Watchlist</button>\r\n          <button>Fave</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"button_info\">\r\n        <button\r\n          className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(1)}\r\n        >\r\n          Details\r\n        </button>\r\n\r\n        <button\r\n          className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n          onClick={() => toggleTab(2)}\r\n        >\r\n          Suggestions\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"content-tabs\">\r\n        <div\r\n          className={toggleState === 1 ? \"content  active-content\" : \"content\"}\r\n        >\r\n          <SeriesInfo />;\r\n        </div>\r\n\r\n        <div\r\n          className={toggleState === 2 ? \"content  active-content\" : \"content\"}\r\n        >\r\n          <SeriesSuggestion />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeriesDetails;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Search.tsx",["284"],[],"import { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  overview: string;\r\n  poster_path: string;\r\n  title: string;\r\n  backdrop_path: string;\r\n  media_type: string;\r\n  know_for: string;\r\n}\r\n\r\ninterface knowFor {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  poster_path: string;\r\n  title: string;\r\n  media_type: string;\r\n}\r\n\r\nfunction Search() {\r\n  let [SearchMovies, setSearchMovies] = useState<moviesProps | undefined>();\r\n  let [SearchMoviesTV, setSearchMoviesTV] = useState<moviesProps | undefined>();\r\n  let [SearchMoviesKnowFor, setSearchMoviesKnowFor] = useState<\r\n    knowFor | undefined\r\n  >();\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${ID}`;\r\n  const URLTV = `https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&language=en-US&query=${ID}`;\r\n  const URLKF = `https://api.themoviedb.org/3/search/person?api_key=${API_KEY}&query=${ID}`;\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n    getMoviesTV();\r\n    KnowFor();\r\n  }, []);\r\n\r\n  const getMovies = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setSearchMovies(data.results);\r\n  };\r\n\r\n  const getMoviesTV = async () => {\r\n    const { data } = await axios.get(URLTV);\r\n    setSearchMoviesTV(data.results);\r\n  };\r\n\r\n  const KnowFor = async () => {\r\n    const { data } = await axios.get(URLKF);\r\n    setSearchMoviesKnowFor(data.results[0].known_for);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Results for {ID}</h1> <br />\r\n      <div className=\"container_genre\">\r\n        {SearchMovies?.map((movie) => (\r\n          <NavLink className=\"poster\" to={`/movie/${movie.id}`}>\r\n            <div id={movie.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {SearchMoviesTV?.map((movieTV) => (\r\n          <NavLink className=\"poster\" to={`/tv/${movieTV.id}`}>\r\n            <div id={movieTV.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movieTV.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {SearchMoviesKnowFor?.map((movieKF) => (\r\n          <NavLink\r\n            className=\"poster\"\r\n            to={`/${movieKF.media_type}/${movieKF.id}`}\r\n          >\r\n            <div id={movieKF.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movieKF.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesGenre.tsx",["285"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  overview: string;\r\n  poster_path: string;\r\n  title: string;\r\n  backdrop_path: string;\r\n}\r\n\r\nfunction SeriesGenre() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URL1 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_genres=${ID}`;\r\n  const URL2 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=2&with_genres=${ID}`;\r\n  const URL3 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=3&with_genres=${ID}`;\r\n  const URL4 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=4&with_genres=${ID}`;\r\n  const URL5 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=5&with_genres=${ID}`;\r\n\r\n  useEffect(() => {\r\n    getMovies1();\r\n    getMovies2();\r\n    getMovies3();\r\n    getMovies4();\r\n    getMovies5();\r\n  }, []);\r\n\r\n  let [movies1, setMovies1] = useState<moviesProps | undefined>();\r\n  let [movies2, setMovies2] = useState<moviesProps | undefined>();\r\n  let [movies3, setMovies3] = useState<moviesProps | undefined>();\r\n  let [movies4, setMovies4] = useState<moviesProps | undefined>();\r\n  let [movies5, setMovies5] = useState<moviesProps | undefined>();\r\n\r\n  const getMovies1 = async () => {\r\n    const { data } = await axios.get(URL1);\r\n    setMovies1(data.results);\r\n  };\r\n\r\n  const getMovies2 = async () => {\r\n    const { data } = await axios.get(URL2);\r\n    setMovies2(data.results);\r\n  };\r\n\r\n  const getMovies3 = async () => {\r\n    const { data } = await axios.get(URL3);\r\n    setMovies3(data.results);\r\n  };\r\n\r\n  const getMovies4 = async () => {\r\n    const { data } = await axios.get(URL4);\r\n    setMovies4(data.results);\r\n  };\r\n\r\n  const getMovies5 = async () => {\r\n    const { data } = await axios.get(URL5);\r\n    setMovies5(data.results);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container_genre\">\r\n        {movies1?.map((movie1) => (\r\n          <NavLink className=\"poster\" to={`/tv/${movie1.id}`}>\r\n            <div id={movie1.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie1.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {movies2?.map((movie2) => (\r\n          <NavLink className=\"poster\" to={`/tv/${movie2.id}`}>\r\n            <div id={movie2.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie2.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {movies3?.map((movie3) => (\r\n          <NavLink className=\"poster\" to={`/tv/${movie3.id}`}>\r\n            <div id={movie3.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie3.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {movies4?.map((movie4) => (\r\n          <NavLink className=\"poster\" to={`/tv/${movie4.id}`}>\r\n            <div id={movie4.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie4.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {movies5?.map((movie5) => (\r\n          <NavLink className=\"poster\" to={`/tv/${movie5.id}`}>\r\n            <div id={movie5.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie5.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeriesGenre;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MoviesGenre.tsx",["286"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  overview: string;\r\n  poster_path: string;\r\n  title: string;\r\n  backdrop_path: string;\r\n}\r\n\r\nfunction MoviesGenre() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URL1 = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_genres=${ID}`;\r\n  const URL2 = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=2&with_genres=${ID}`;\r\n  const URL3 = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=3&with_genres=${ID}`;\r\n  const URL4 = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=4&with_genres=${ID}`;\r\n  const URL5 = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=5&with_genres=${ID}`;\r\n\r\n  useEffect(() => {\r\n    getMovies1();\r\n    getMovies2();\r\n    getMovies3();\r\n    getMovies4();\r\n    getMovies5();\r\n  }, []);\r\n\r\n  let [movies1, setMovies1] = useState<moviesProps | undefined>();\r\n  let [movies2, setMovies2] = useState<moviesProps | undefined>();\r\n  let [movies3, setMovies3] = useState<moviesProps | undefined>();\r\n  let [movies4, setMovies4] = useState<moviesProps | undefined>();\r\n  let [movies5, setMovies5] = useState<moviesProps | undefined>();\r\n\r\n  const getMovies1 = async () => {\r\n    const { data } = await axios.get(URL1);\r\n    setMovies1(data.results);\r\n  };\r\n\r\n  const getMovies2 = async () => {\r\n    const { data } = await axios.get(URL2);\r\n    setMovies2(data.results);\r\n  };\r\n\r\n  const getMovies3 = async () => {\r\n    const { data } = await axios.get(URL3);\r\n    setMovies3(data.results);\r\n  };\r\n\r\n  const getMovies4 = async () => {\r\n    const { data } = await axios.get(URL4);\r\n    setMovies4(data.results);\r\n  };\r\n\r\n  const getMovies5 = async () => {\r\n    const { data } = await axios.get(URL5);\r\n    setMovies5(data.results);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container_genre\">\r\n        {movies1?.map((movie1) => (\r\n          <NavLink className=\"poster\" to={`/Movie/${movie1.id}`}>\r\n            <div id={movie1.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie1.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {movies2?.map((movie2) => (\r\n          <NavLink className=\"poster\" to={`/Movie/${movie2.id}`}>\r\n            <div id={movie2.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie2.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {movies3?.map((movie3) => (\r\n          <NavLink className=\"poster\" to={`/Movie/${movie3.id}`}>\r\n            <div id={movie3.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie3.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {movies4?.map((movie4) => (\r\n          <NavLink className=\"poster\" to={`/Movie/${movie4.id}`}>\r\n            <div id={movie4.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie4.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n\r\n        {movies5?.map((movie5) => (\r\n          <NavLink className=\"poster\" to={`/Movie/${movie5.id}`}>\r\n            <div id={movie5.id} className=\"movies_container_poster\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500` + movie5.poster_path}\r\n                alt=\"poster\"\r\n              />\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesGenre;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Connection.tsx",["287","288"],[],"import React from \"react\";\r\nimport axios, { Axios } from \"axios\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\ntype connect = {\r\n  isOpen: boolean;\r\n  setIsOpen: any;\r\n};\r\n\r\ninterface UserConnection {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nfunction Connection({ isOpen, setIsOpen }: connect) {\r\n  const [user, setUser] = React.useState<UserConnection>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:5000/api/user/login\", user)\r\n      .then((res) => {\r\n        res.data.token && localStorage.setItem(\"token\", res.data.token);\r\n        res.data.user &&\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n        res.data.admin &&\r\n          localStorage.setItem(\"admin\", JSON.stringify(res.data.admin));\r\n        setIsOpen(false);\r\n        window.location.href = \"/Home\";\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"connection_form_container\">\r\n        <div className=\"connection_form_subContainer\">\r\n          <i\r\n            className=\"fa-solid fa-square-xmark\"\r\n            onClick={() => setIsOpen(false)}\r\n          ></i>\r\n\r\n          <form className=\"form_Container\">\r\n            <h1>Login In</h1>\r\n\r\n            <div className=\"form_subContainer\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"on\"\r\n                id=\"emailLogin\"\r\n                value={user.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form_subContainer\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                autoComplete=\"on\"\r\n                id=\"loginPass\"\r\n                value={user.password}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form_subContainer\">\r\n              <button type=\"submit\" name=\"submit\" onClick={handleSubmit}>\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Connection;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\pages\\ActorPage.tsx",["289"],[],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Actors from \"../component/Actors\";\r\nimport Footer from \"../component/Footer\";\r\nimport Header from \"../component/Header\";\r\n\r\nfunction ActorPage() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <main className=\"content-container\">\r\n        <Actors />\r\n      </main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ActorPage;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\Actors.tsx",["290","291"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface ActorProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  birthday: string;\r\n  known_for_department: string;\r\n  deathday: string;\r\n  name: string;\r\n  biography: string;\r\n  place_of_birth: string;\r\n  profile_path: string;\r\n  imdb_id: string;\r\n}\r\n\r\nfunction Actors() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n\r\n  const URL = `https://api.themoviedb.org/3/person/${ID}?api_key=${API_KEY}&language=en-US`;\r\n\r\n  let [Actor, setActor] = useState<ActorProps | undefined>();\r\n  useEffect(() => {\r\n    getActor();\r\n  }, []);\r\n\r\n  const getActor = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setActor(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container_actor\">\r\n        <div className=\"container_info_actors\">\r\n          <div className=\"image_actor\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original` + Actor?.profile_path}\r\n              alt=\"actor\"\r\n            />\r\n          </div>\r\n          <div className=\"info_actor\">\r\n            <h1>{Actor?.name}</h1>\r\n            <p>{Actor?.biography}</p>\r\n            <br />\r\n            <a href={`https://www.imdb.com/name/${Actor?.imdb_id}/`}>\r\n              <i className=\"fa-brands fa-imdb\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Actors;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MoviesInfo.tsx",["292"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  id: string;\r\n  overview: string;\r\n  runtime: string;\r\n  title: string;\r\n  tagline: string;\r\n  release_date: string;\r\n  vote_average: string;\r\n}\r\n\r\ninterface GenresProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface CastProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  name: string;\r\n  character: string;\r\n  profile_path: string;\r\n  job: string;\r\n}\r\n\r\nfunction MoviesInfo() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URL = `https://api.themoviedb.org/3/movie/${ID}?api_key=${API_KEY}&language=en-US`;\r\n  const URLCAST = `https://api.themoviedb.org/3/movie/${ID}/credits?api_key=${API_KEY}&language=en-US`;\r\n\r\n  console.log(URL);\r\n\r\n  let [movies, setMovies] = useState<moviesProps | undefined>();\r\n  let [moviesGenres, setMoviesGenres] = useState<GenresProps | undefined>();\r\n  let [moviesCast, setMoviesCast] = useState<CastProps | undefined>();\r\n  let [moviesDir, setMoviesDir] = useState<CastProps | undefined>();\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n    getMovieGenres();\r\n    getMovieCast();\r\n    getMovieDir();\r\n  }, []);\r\n\r\n  const getMovie = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMovies(data);\r\n  };\r\n\r\n  const getMovieGenres = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMoviesGenres(data.genres);\r\n  };\r\n\r\n  const getMovieCast = async () => {\r\n    const { data } = await axios.get(URLCAST);\r\n    setMoviesCast(data.cast.slice(0, 9));\r\n  };\r\n\r\n  const getMovieDir = async () => {\r\n    const { data } = await axios.get(URLCAST);\r\n    setMoviesDir(data.crew.slice(0, 4));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"info\">\r\n        <div className=\"details\">\r\n          <div className=\"info_series_movies\">\r\n            <div className=\"title_container\">\r\n              <h1 className=\"Title\">{movies?.title}</h1>\r\n              <p className=\"TagLine\">{movies?.tagline}</p>\r\n            </div>\r\n\r\n            <div className=\"genre_container\">\r\n              {moviesGenres?.map((genres) => (\r\n                <div className=\"genres\">\r\n                  <NavLink className=\"genre\" to={`/movie/Genre/${genres.id}`}>\r\n                    <button className=\"genre_button\">{genres.name}</button>\r\n                  </NavLink>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"date\">\r\n              <p className=\"airDate\">Air date: {movies?.release_date}</p>\r\n              <p className=\"RunTime\">Run time: {movies?.runtime} min</p>\r\n              <p className=\"note\">Note: {movies?.vote_average}</p>\r\n            </div>\r\n\r\n            <div className=\"date\">\r\n              {moviesDir?.map((crew) => (\r\n                <p>\r\n                  {crew.job} / {crew.name}\r\n                </p>\r\n              ))}\r\n            </div>\r\n\r\n            <p className=\"resume\">{movies?.overview}</p>\r\n          </div>\r\n          <div className=\"info_cast\">\r\n            {moviesCast?.map((cast) => (\r\n              <div>\r\n                <NavLink className=\"genre\" to={`/Actor/${cast.id}`}>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w500` + cast.profile_path}\r\n                    alt=\"cast\"\r\n                  />\r\n                </NavLink>\r\n                <p className=\"cast\">{cast.name}</p>\r\n                <p className=\"character\">{cast.character}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesInfo;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\MoviesSuggestion.tsx",["293"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  id: string;\r\n  overview: string;\r\n  runtime: string;\r\n  title: string;\r\n  tagline: string;\r\n  release_date: string;\r\n  vote_average: string;\r\n}\r\n\r\nfunction MoviesSuggestion() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URLSIMMOVIES = `https://api.themoviedb.org/3/movie/${ID}/similar?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n  console.log(URL);\r\n\r\n  let [moviesSim, setMoviesSim] = useState<moviesProps | undefined>();\r\n\r\n  useEffect(() => {\r\n    getMovieSim();\r\n  }, []);\r\n\r\n  const getMovieSim = async () => {\r\n    const { data } = await axios.get(URLSIMMOVIES);\r\n    setMoviesSim(data.results);\r\n  };\r\n\r\n  function refreshPage() {\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"suggestions\">\r\n        <h2>Suggestions</h2>\r\n        <div className=\"poster_movies\">\r\n          {moviesSim?.map((movieSim) => (\r\n            <NavLink\r\n              className=\"poster\"\r\n              onClick={refreshPage}\r\n              to={`/movie/${movieSim.id}`}\r\n            >\r\n              <div id={movieSim.id} className=\"movies_container_poster\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500` + movieSim.poster_path}\r\n                  alt=\"poster\"\r\n                />\r\n              </div>\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesSuggestion;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesInfo.tsx",["294"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  id: string;\r\n  overview: string;\r\n  runtime: string;\r\n  name: string;\r\n  tagline: string;\r\n  first_air_date: string;\r\n  last_air_date: string;\r\n  0: string;\r\n  number_of_seasons: string;\r\n  number_of_episodes: string;\r\n  vote_average: string;\r\n}\r\n\r\ninterface GenresProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface CastProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  name: string;\r\n  character: string;\r\n  profile_path: string;\r\n}\r\n\r\nfunction SeriesInfo() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URL = `https://api.themoviedb.org/3/tv/${ID}?api_key=${API_KEY}&language=en-US`;\r\n  const URLCAST = `https://api.themoviedb.org/3/tv/${ID}/credits?api_key=${API_KEY}&language=en-US`;\r\n\r\n  let [movies, setMovies] = useState<moviesProps | undefined>();\r\n  let [moviesRunTime, setMoviesRunTime] = useState<moviesProps | undefined>();\r\n  let [moviesGenres, setMoviesGenres] = useState<GenresProps | undefined>();\r\n  let [moviesCast, setMoviesCast] = useState<CastProps | undefined>();\r\n  let [moviesDir, setMoviesDir] = useState<CastProps | undefined>();\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n    getMovieRunTime();\r\n    getMovieGenres();\r\n    getMovieCast();\r\n    getMovieDir();\r\n  }, []);\r\n\r\n  const getMovie = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMovies(data);\r\n  };\r\n\r\n  const getMovieRunTime = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMoviesRunTime(data.episode_run_time);\r\n  };\r\n\r\n  const getMovieGenres = async () => {\r\n    const { data } = await axios.get(URL);\r\n    setMoviesGenres(data.genres);\r\n  };\r\n\r\n  const getMovieCast = async () => {\r\n    const { data } = await axios.get(URLCAST);\r\n    setMoviesCast(data.cast.slice(0, 9));\r\n  };\r\n\r\n  const getMovieDir = async () => {\r\n    const { data } = await axios.get(URLCAST);\r\n    setMoviesDir(data.crew.slice(0, 4));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"info\">\r\n        <div className=\"details\">\r\n          <div className=\"info_series_movies\">\r\n            <div className=\"title_container\">\r\n              <h1 className=\"Title\">{movies?.name}</h1>\r\n              <p className=\"TagLine\">{movies?.tagline}</p>\r\n            </div>\r\n\r\n            <div className=\"genre_container\">\r\n              {moviesGenres?.map((genres) => (\r\n                <div className=\"genres\">\r\n                  <NavLink className=\"genre\" to={`/Serie/Genre/${genres.id}`}>\r\n                    <button className=\"genre_button\">{genres.name}</button>\r\n                  </NavLink>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"date\">\r\n              <p className=\"airDate\">\r\n                First air date: {movies?.first_air_date}\r\n              </p>\r\n              <p className=\"airDate\">Last air date: {movies?.last_air_date}</p>\r\n              <p className=\"RunTime\">Run time: {moviesRunTime?.[0]} min</p>\r\n              <p className=\"note\">Note: {movies?.vote_average}</p>\r\n            </div>\r\n\r\n            <div className=\"date\">\r\n              {moviesDir?.map((crew) => (\r\n                <p>\r\n                  {crew.job} / {crew.name}\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <div className=\"date\">\r\n              <p className=\"seasons\">\r\n                Number of seasons: {movies?.number_of_seasons}\r\n              </p>\r\n              <p className=\"episodes\">\r\n                Number of episodes: {movies?.number_of_episodes}\r\n              </p>\r\n            </div>\r\n\r\n            <p className=\"resume\">{movies?.overview}</p>\r\n          </div>\r\n          <div className=\"info_cast\">\r\n            {moviesCast?.map((cast) => (\r\n              <div>\r\n                <NavLink className=\"genre\" to={`/Actor/${cast.id}`}>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w500` + cast.profile_path}\r\n                    alt=\"cast\"\r\n                  />\r\n                </NavLink>\r\n                <p className=\"cast\">{cast.name}</p>\r\n                <p className=\"character\">{cast.character}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeriesInfo;\r\n","C:\\Users\\acer\\Desktop\\Mountain-Project\\frontend\\holly-break\\src\\component\\SeriesSuggestion.tsx",["295","296","297","298"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"a378b12e0a9383634a503a8f29d43915\";\r\n\r\ninterface moviesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  id: string;\r\n  overview: string;\r\n  runtime: string;\r\n  name: string;\r\n  tagline: string;\r\n  first_air_date: string;\r\n  last_air_date: string;\r\n  0: string;\r\n  number_of_seasons: string;\r\n  number_of_episodes: string;\r\n  vote_average: string;\r\n}\r\n\r\ninterface GenresProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface picturesProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  file_path: string;\r\n}\r\n\r\ninterface CastProps {\r\n  map(arg0: (item: any) => JSX.Element): import(\"react\").ReactNode;\r\n  id: number;\r\n  name: string;\r\n  character: string;\r\n  profile_path: string;\r\n}\r\n\r\nfunction SeriesSuggestion() {\r\n  let id = useParams();\r\n  const ID = id.id;\r\n  const URLSIMMOVIES = `https://api.themoviedb.org/3/tv/${ID}/similar?api_key=${API_KEY}&language=en-US`;\r\n\r\n  let [moviesSim, setMoviesSim] = useState<moviesProps | undefined>();\r\n\r\n  useEffect(() => {\r\n    getMovieSim();\r\n  }, []);\r\n\r\n  const getMovieSim = async () => {\r\n    const { data } = await axios.get(URLSIMMOVIES);\r\n    setMoviesSim(data.results);\r\n  };\r\n\r\n  function refreshPage() {\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"suggestions\">\r\n        <h2>Suggestions</h2>\r\n        <div className=\"poster_movies\">\r\n          {moviesSim?.map((movieSim) => (\r\n            <NavLink\r\n              className=\"poster\"\r\n              onClick={refreshPage}\r\n              to={`/tv/${movieSim.id}`}\r\n            >\r\n              <div id={movieSim.id} className=\"movies_container_poster\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500` + movieSim.poster_path}\r\n                  alt=\"poster\"\r\n                />\r\n              </div>\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeriesSuggestion;\r\n",{"ruleId":"299","severity":1,"message":"300","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"303","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":18},{"ruleId":"299","severity":1,"message":"304","line":2,"column":20,"nodeType":"301","messageId":"302","endLine":2,"endColumn":29},{"ruleId":"299","severity":1,"message":"305","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":13},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"306","line":113,"column":13,"nodeType":"301","messageId":"302","endLine":113,"endColumn":21},{"ruleId":"299","severity":1,"message":"307","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":18},{"ruleId":"299","severity":1,"message":"308","line":32,"column":10,"nodeType":"301","messageId":"302","endLine":32,"endColumn":16},{"ruleId":"309","severity":1,"message":"310","line":41,"column":6,"nodeType":"311","endLine":41,"endColumn":8,"suggestions":"312"},{"ruleId":"299","severity":1,"message":"300","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"303","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":18},{"ruleId":"299","severity":1,"message":"304","line":2,"column":20,"nodeType":"301","messageId":"302","endLine":2,"endColumn":29},{"ruleId":"299","severity":1,"message":"305","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":13},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":17},{"ruleId":"299","severity":1,"message":"303","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":18},{"ruleId":"299","severity":1,"message":"304","line":2,"column":20,"nodeType":"301","messageId":"302","endLine":2,"endColumn":29},{"ruleId":"299","severity":1,"message":"305","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":13},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":17},{"ruleId":"309","severity":1,"message":"313","line":26,"column":6,"nodeType":"311","endLine":26,"endColumn":8,"suggestions":"314"},{"ruleId":"309","severity":1,"message":"315","line":100,"column":6,"nodeType":"311","endLine":100,"endColumn":8,"suggestions":"316"},{"ruleId":"299","severity":1,"message":"304","line":5,"column":20,"nodeType":"301","messageId":"302","endLine":5,"endColumn":29},{"ruleId":"317","severity":1,"message":"318","line":87,"column":13,"nodeType":"319","endLine":87,"endColumn":74},{"ruleId":"309","severity":1,"message":"320","line":42,"column":6,"nodeType":"311","endLine":42,"endColumn":8,"suggestions":"321"},{"ruleId":"299","severity":1,"message":"300","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":17},{"ruleId":"309","severity":1,"message":"322","line":24,"column":6,"nodeType":"311","endLine":24,"endColumn":8,"suggestions":"323"},{"ruleId":"309","severity":1,"message":"324","line":104,"column":6,"nodeType":"311","endLine":104,"endColumn":8,"suggestions":"325"},{"ruleId":"299","severity":1,"message":"300","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":17},{"ruleId":"309","severity":1,"message":"322","line":23,"column":6,"nodeType":"311","endLine":23,"endColumn":8,"suggestions":"326"},{"ruleId":"309","severity":1,"message":"320","line":44,"column":6,"nodeType":"311","endLine":44,"endColumn":8,"suggestions":"327"},{"ruleId":"309","severity":1,"message":"328","line":42,"column":6,"nodeType":"311","endLine":42,"endColumn":8,"suggestions":"329"},{"ruleId":"309","severity":1,"message":"330","line":32,"column":6,"nodeType":"311","endLine":32,"endColumn":8,"suggestions":"331"},{"ruleId":"309","severity":1,"message":"330","line":32,"column":6,"nodeType":"311","endLine":32,"endColumn":8,"suggestions":"332"},{"ruleId":"299","severity":1,"message":"333","line":2,"column":17,"nodeType":"301","messageId":"302","endLine":2,"endColumn":22},{"ruleId":"299","severity":1,"message":"334","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":17},{"ruleId":"309","severity":1,"message":"335","line":30,"column":6,"nodeType":"311","endLine":30,"endColumn":8,"suggestions":"336"},{"ruleId":"309","severity":1,"message":"337","line":54,"column":6,"nodeType":"311","endLine":54,"endColumn":8,"suggestions":"338"},{"ruleId":"309","severity":1,"message":"339","line":32,"column":6,"nodeType":"311","endLine":32,"endColumn":8,"suggestions":"340"},{"ruleId":"309","severity":1,"message":"341","line":57,"column":6,"nodeType":"311","endLine":57,"endColumn":8,"suggestions":"342"},{"ruleId":"299","severity":1,"message":"343","line":25,"column":11,"nodeType":"301","messageId":"302","endLine":25,"endColumn":22},{"ruleId":"299","severity":1,"message":"344","line":31,"column":11,"nodeType":"301","messageId":"302","endLine":31,"endColumn":24},{"ruleId":"299","severity":1,"message":"345","line":36,"column":11,"nodeType":"301","messageId":"302","endLine":36,"endColumn":20},{"ruleId":"309","severity":1,"message":"339","line":53,"column":6,"nodeType":"311","endLine":53,"endColumn":8,"suggestions":"346"},"@typescript-eslint/no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'response' is assigned a value but never used.","'Connection' is defined but never used.","'movies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.","ArrayExpression",["347"],"React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["348"],"React Hook useEffect has missing dependencies: 'getTVAction', 'getTVComedy', 'getTVCrime', 'getTVDoc', 'getTVDrama', 'getTVFam', 'getTVFantasy', 'getTVKid', 'getTVMystery', 'getTVNews', 'getTVReality', 'getTVShow', 'getTVSoap', 'getTVTalk', 'getTVWar', and 'getTVWestern'. Either include them or remove the dependency array.",["349"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getMovie' and 'getPicture'. Either include them or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.",["351"],"React Hook useEffect has missing dependencies: 'getMovies', 'getMoviesAction', 'getMoviesAdventure', 'getMoviesAnimation', 'getMoviesComedy', 'getMoviesCrime', 'getMoviesDoc', 'getMoviesDrama', 'getMoviesFam', 'getMoviesFantasy', 'getMoviesHistory', 'getMoviesHorror', 'getMoviesMusic', 'getMoviesMyst', 'getMoviesRom', 'getMoviesSyfy', 'getMoviesTVMovie', 'getMoviesThriller', 'getMoviesWar', and 'getMoviesWestern'. Either include them or remove the dependency array.",["352"],["353"],["354"],"React Hook useEffect has missing dependencies: 'KnowFor', 'getMovies', and 'getMoviesTV'. Either include them or remove the dependency array.",["355"],"React Hook useEffect has missing dependencies: 'getMovies1', 'getMovies2', 'getMovies3', 'getMovies4', and 'getMovies5'. Either include them or remove the dependency array.",["356"],["357"],"'Axios' is defined but never used.","'Navigate' is defined but never used.","React Hook useEffect has a missing dependency: 'getActor'. Either include it or remove the dependency array.",["358"],"React Hook useEffect has missing dependencies: 'getMovie', 'getMovieCast', 'getMovieDir', and 'getMovieGenres'. Either include them or remove the dependency array.",["359"],"React Hook useEffect has a missing dependency: 'getMovieSim'. Either include it or remove the dependency array.",["360"],"React Hook useEffect has missing dependencies: 'getMovie', 'getMovieCast', 'getMovieDir', 'getMovieGenres', and 'getMovieRunTime'. Either include them or remove the dependency array.",["361"],"'GenresProps' is defined but never used.","'picturesProps' is defined but never used.","'CastProps' is defined but never used.",["362"],{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"371","fix":"375"},{"desc":"369","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"379","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"386","fix":"390"},"Update the dependencies array to be: [getMovies]",{"range":"391","text":"392"},"Update the dependencies array to be: [id]",{"range":"393","text":"394"},"Update the dependencies array to be: [getTVAction, getTVComedy, getTVCrime, getTVDoc, getTVDrama, getTVFam, getTVFantasy, getTVKid, getTVMystery, getTVNews, getTVReality, getTVShow, getTVSoap, getTVTalk, getTVWar, getTVWestern]",{"range":"395","text":"396"},"Update the dependencies array to be: [getMovie, getPicture]",{"range":"397","text":"398"},"Update the dependencies array to be: [getMovie]",{"range":"399","text":"400"},"Update the dependencies array to be: [getMovies, getMoviesAction, getMoviesAdventure, getMoviesAnimation, getMoviesComedy, getMoviesCrime, getMoviesDoc, getMoviesDrama, getMoviesFam, getMoviesFantasy, getMoviesHistory, getMoviesHorror, getMoviesMusic, getMoviesMyst, getMoviesRom, getMoviesSyfy, getMoviesTVMovie, getMoviesThriller, getMoviesWar, getMoviesWestern]",{"range":"401","text":"402"},{"range":"403","text":"400"},{"range":"404","text":"398"},"Update the dependencies array to be: [KnowFor, getMovies, getMoviesTV]",{"range":"405","text":"406"},"Update the dependencies array to be: [getMovies1, getMovies2, getMovies3, getMovies4, getMovies5]",{"range":"407","text":"408"},{"range":"409","text":"408"},"Update the dependencies array to be: [getActor]",{"range":"410","text":"411"},"Update the dependencies array to be: [getMovie, getMovieCast, getMovieDir, getMovieGenres]",{"range":"412","text":"413"},"Update the dependencies array to be: [getMovieSim]",{"range":"414","text":"415"},"Update the dependencies array to be: [getMovie, getMovieCast, getMovieDir, getMovieGenres, getMovieRunTime]",{"range":"416","text":"417"},{"range":"418","text":"415"},[1115,1117],"[getMovies]",[659,661],"[id]",[4171,4173],"[getTVAction, getTVComedy, getTVCrime, getTVDoc, getTVDrama, getTVFam, getTVFantasy, getTVKid, getTVMystery, getTVNews, getTVReality, getTVShow, getTVSoap, getTVTalk, getTVWar, getTVWestern]",[1204,1206],"[getMovie, getPicture]",[631,633],"[getMovie]",[4927,4929],"[getMovies, getMoviesAction, getMoviesAdventure, getMoviesAnimation, getMoviesComedy, getMoviesCrime, getMoviesDoc, getMoviesDrama, getMoviesFam, getMoviesFantasy, getMoviesHistory, getMoviesHorror, getMoviesMusic, getMoviesMyst, getMoviesRom, getMoviesSyfy, getMoviesTVMovie, getMoviesThriller, getMoviesWar, getMoviesWestern]",[631,633],[1278,1280],[1321,1323],"[KnowFor, getMovies, getMoviesTV]",[1328,1330],"[getMovies1, getMovies2, getMovies3, getMovies4, getMovies5]",[1343,1345],[785,787],"[getActor]",[1520,1522],"[getMovie, getMovieCast, getMovieDir, getMovieGenres]",[847,849],"[getMovieSim]",[1681,1683],"[getMovie, getMovieCast, getMovieDir, getMovieGenres, getMovieRunTime]",[1346,1348]]